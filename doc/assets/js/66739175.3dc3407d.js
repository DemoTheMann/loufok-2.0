"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[8358],{7374:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var d=a(5893),t=a(1151);const n={sidebar_position:2},o="periodes()",s={id:"model-cadavre/periodes",title:"periodes()",description:"La m\xe9thode periodes() de la classe CadavreModel ne prend pas de param\xe8tres et renvoit un array des p\xe9riodes d\xe9j\xe0 occup\xe9es par des cadavres existant.",source:"@site/docs/model-cadavre/periodes.md",sourceDirName:"model-cadavre",slug:"/model-cadavre/periodes",permalink:"/loufok/doc/docs/model-cadavre/periodes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model-cadavre/periodes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"getInstance()",permalink:"/loufok/doc/docs/model-cadavre/getInstance"},next:{title:"titres()",permalink:"/loufok/doc/docs/model-cadavre/titres"}},i={},c=[{value:"Code",id:"code",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h1,{id:"periodes",children:"periodes()"}),"\n",(0,d.jsx)(r.p,{children:"La m\xe9thode periodes() de la classe CadavreModel ne prend pas de param\xe8tres et renvoit un array des p\xe9riodes d\xe9j\xe0 occup\xe9es par des cadavres existant."}),"\n",(0,d.jsx)(r.p,{children:"Cette m\xe9thode fait appel \xe0 l'entit\xe9e :"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsx)(r.li,{children:(0,d.jsx)(r.code,{children:"Cadavre"})}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"code",children:"Code"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-php",metastring:'title="CadavreModel"',children:"public static function periodes(){\r\n        $cadavres = Cadavre::getInstance()->findAll();\r\n        $periodes = [];\r\n        $result = [];\r\n        $i = 0;\r\n        foreach ($cadavres as $cadavre) {\r\n            $i = $i + 1;\r\n            $periodes[$i] = \r\n            [\r\n                'debut_cadavre' => $cadavre['date_debut_cadavre'],\r\n                'fin_cadavre' => $cadavre['date_fin_cadavre']\r\n            ];\r\n            array_push($result, $periodes[$i]);\r\n        }\r\n        return $periodes;\r\n    }\n"})})]})}function p(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},1151:(e,r,a)=>{a.d(r,{Z:()=>s,a:()=>o});var d=a(7294);const t={},n=d.createContext(t);function o(e){const r=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),d.createElement(n.Provider,{value:r},e.children)}}}]);