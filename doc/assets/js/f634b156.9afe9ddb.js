"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[4085],{7860:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var o=t(5893),r=t(1151);const i={sidebar_position:3},a="setRandom()",d={id:"model-contribution/setRandom",title:"setRandom()",description:"La m\xe9thode setRandom() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un joueur pour d\xe9finir la contribution choisit al\xe9atoirement qui lui sera rattach\xe9 pour la Cadavre Exquis en cours.",source:"@site/docs/model-contribution/setRandom.md",sourceDirName:"model-contribution",slug:"/model-contribution/setRandom",permalink:"/docs/model-contribution/setRandom",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model-contribution/setRandom.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"getRandom()",permalink:"/docs/model-contribution/getRandom"},next:{title:"countContrib()",permalink:"/docs/model-contribution/countContrib"}},s={},c=[{value:"Code",id:"code",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"setrandom",children:"setRandom()"}),"\n",(0,o.jsx)(e.p,{children:"La m\xe9thode setRandom() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un joueur pour d\xe9finir la contribution choisit al\xe9atoirement qui lui sera rattach\xe9 pour la Cadavre Exquis en cours."}),"\n",(0,o.jsx)(e.p,{children:"Lorsque la contribution choisit al\xe9atoirement \xe0 \xe9t\xe9 ajout\xe9e, la m\xe9thode la renvoit."}),"\n",(0,o.jsx)(e.p,{children:"Cette m\xe9thode fait appel aux entit\xe9es :"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"Contribution"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"ContributionAl\xe9atoire"})}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"CadavreModel"})," -> pour utiliser la m\xe9thode ",(0,o.jsx)(e.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"code",children:"Code"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-php",metastring:'title="ContributionModel.php"',children:"public static function setRandom(int $id_joueur)\r\n    {\r\n        $activeCadavre = CadavreModel::getInstance()->cadavreEnCours();\r\n        //var_dump($activeCadavre);\r\n        $cadavreCountContrib = count(Contribution::getInstance()->findBy(['id_cadavre' => $activeCadavre['id_cadavre']]));\r\n        $random = random_int(1, $cadavreCountContrib);\r\n        $randomContrib = Contribution::getInstance()->findBy(['ordre_soumission' => $random])[0];\r\n        $contribAleatoire = ContributionAleatoire::getInstance()->create(\r\n            [ \r\n                'id_joueur' => $id_joueur,\r\n                'id_cadavre' => $randomContrib['id_cadavre'],\r\n                'num_contribution' => $randomContrib['id_contribution']\r\n            ]); \r\n            // var_dump($randomContrib);\r\n        return $contribAleatoire;\r\n    }\n"})})]})}function l(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>d,a:()=>a});var o=t(7294);const r={},i=o.createContext(r);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);