"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[5717],{1394:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=i(5893),r=i(1151);const o={sidebar_position:4},s="Model Contribution",l={id:"models/model-contribution",title:"Model Contribution",description:'Le Model Contribution g\xe8re les m\xe9thodes li\xe9es aux contributions, notamment en fonction de l"utilisateur et du cadavre exquis.',source:"@site/docs/models/model-contribution.md",sourceDirName:"models",slug:"/models/model-contribution",permalink:"/loufok/doc/docs/models/model-contribution",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Model Joueur",permalink:"/loufok/doc/docs/models/model-joueur"},next:{title:"Model Admin",permalink:"/loufok/doc/docs/models/model-admin"}},d={},c=[{value:"getInstance()",id:"getinstance",level:2},{value:"getRandom()",id:"getrandom",level:2},{value:"setRandom()",id:"setrandom",level:2},{value:"countContrib()",id:"countcontrib",level:2},{value:"newContrib()",id:"newcontrib",level:2},{value:"getUserContrib()",id:"getusercontrib",level:2},{value:"getContribs()",id:"getcontribs",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"model-contribution",children:"Model Contribution"}),"\n",(0,t.jsx)(n.p,{children:'Le Model Contribution g\xe8re les m\xe9thodes li\xe9es aux contributions, notamment en fonction de l"utilisateur et du cadavre exquis.'}),"\n",(0,t.jsx)(n.h2,{id:"getinstance",children:"getInstance()"}),"\n",(0,t.jsx)(n.p,{children:"La m\xe9thode getInstance() ne prend pas de param\xe8tres et renvoie l'instance de la classe statique ContributionModel."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"getrandom",children:"getRandom()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode getRandom() prend en param\xe8tre l'identifiant d'un joueur ( ",(0,t.jsx)(n.em,{children:"int"})," ) et r\xe9cup\xe8re la contribution al\xe9atoire qui lui est allou\xe9e pour le cadavre exquis en cours."]}),"\n",(0,t.jsxs)(n.p,{children:["Si la contribution choisit al\xe9atoirement existe, renvoie la contribution en question ( ",(0,t.jsx)(n.em,{children:"array"})," ).\r\nSi la contribution choisit al\xe9atoirement n'existe pas, renvoie ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9s :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ContributionAl\xe9atoire"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CadavreModel"})," pour utiliser la fonction ",(0,t.jsx)(n.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n$user_id = $_SESSION['user_id'];\r\n$randomContribution = $contribModel->getRandom($user_id);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"setrandom",children:"setRandom()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode getRandom() prend en param\xe8tre l'identifiant d'un joueur ( ",(0,t.jsx)(n.em,{children:"int"})," ) et lui assigne une contribution al\xe9atoire pour le cadavre exquis en cours."]}),"\n",(0,t.jsxs)(n.p,{children:["Renvoie la contribution al\xe9atoire tout juste choisie ( ",(0,t.jsx)(n.em,{children:"array"})," )."]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9s :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ContributionAl\xe9atoire"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CadavreModel"})," pour utiliser la m\xe9thode ",(0,t.jsx)(n.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n$user_id = $_SESSION['user_id'];\r\n$randomContribution = $contribModel->getRandom($user_id);\r\n\r\nif(!$random){\r\n    $random = $contribModel->setRandom($user_id);\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"countcontrib",children:"countContrib()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode countContrib() prend en param\xe8tre l'identifiant d'un cadavre exquis ( ",(0,t.jsx)(n.em,{children:"int"})," ) et renvoie le nombre de contributions ( ",(0,t.jsx)(n.em,{children:"int"})," ) qui lui sont attribu\xe9es."]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel \xe0 l'entit\xe9 :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CadavreModel"})," pour utiliser la m\xe9thode `cadavreEnCours()"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n$totalContrib = $contribModel->countContrib($id_cadavre);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"newcontrib",children:"newContrib()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode newContrib() enregistre une nouvelle contribution dans la base de donn\xe9es (table ",(0,t.jsx)(n.strong,{children:"contribution"}),"). Elle prend en param\xe8tres :"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["l'identifiant du joueur ( ",(0,t.jsx)(n.em,{children:"int"})," )"]}),"\n",(0,t.jsxs)(n.li,{children:["le cadavre exquis en cours ( ",(0,t.jsx)(n.em,{children:"array"})," )"]}),"\n",(0,t.jsxs)(n.li,{children:["le contenu textuel de la contribution ( ",(0,t.jsx)(n.em,{children:"string"})," )"]}),"\n",(0,t.jsxs)(n.li,{children:["l'ordre a attribuer \xe0 la contribution ( ",(0,t.jsx)(n.em,{children:"int"})," )"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Renvoie ",(0,t.jsx)(n.strong,{children:"null"}),", g\xe8re seulement l'insertion de la nouvelle contribution dans la base de donn\xe9es."]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9s :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Cadavre"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n$user_id = $_SESSION['user_id'];\r\n$totalContrib = $contribModel->countContrib($activeCadavre_id);\r\n\r\n$contribModel->newContrib($user_id, $activeCadavre, $texte_contribution, $totalContrib+1);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"getusercontrib",children:"getUserContrib()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode getUserContrib() prend en param\xe8tre l'identifiant d'un utilisateur ( ",(0,t.jsx)(n.em,{children:"int"})," ) pour v\xe9rifier si ce dernier a particip\xe9 au cadavre exquis en cours."]}),"\n",(0,t.jsxs)(n.p,{children:["Si la contribution existe, renvoie la contribution en question ( ",(0,t.jsx)(n.em,{children:"array"})," ).\r\nSi la contribution n'existe pas, la m\xe9thode renvoie ",(0,t.jsx)(n.em,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9s :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CadavreModel"})," pour utiliser la m\xe9thode ",(0,t.jsx)(n.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n$user_id = $_SESSION['user_id'];\r\n$userContrib = $contribModel->getUserContrib($user_id);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"getcontribs",children:"getContribs()"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode getContribs() prend en param\xe8tre l'identifiant d'un cadavre exquis ( ",(0,t.jsx)(n.em,{children:"int"})," ) et renvoie toutes les contributions qui lui sont associ\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:["Renvoie un tableau index\xe9 contenant des tableaux associatifs ( ",(0,t.jsx)(n.em,{children:"array"})," ) :"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"joueurs"})," contenant les pseudonymes des auteurs des contributions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"contributions"})," contenant le contenu textuel des contributions"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9s :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Contribution"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Joueur"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="ContributionController.php"',children:"$contribModel = ContributionModel::getInstance();\r\n/* Renvoie un array d'arrays avec deux donn\xe9es:\r\n *   contributions : texte de la contribution\r\n *   joueurs : pseudo du joueur\r\n */\r\n$contributionsContent = $contribModel->getContribs($id_cadavre);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var t=i(7294);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);