"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[2120],{8455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(5893),i=n(1151);const o={sidebar_position:6},s="getUserContrib()",a={id:"model-contribution/getUserContrib",title:"getUserContrib()",description:"La m\xe9thode getUserContrib() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un utilisateur et recherche la contribution de l'utilisateur pour le cadavre en cours, pour v\xe9rifier si le joueur \xe0 d\xe9j\xe0 participer \xe0 un cadavre ou non.",source:"@site/docs/model-contribution/getUserContrib.md",sourceDirName:"model-contribution",slug:"/model-contribution/getUserContrib",permalink:"/docs/model-contribution/getUserContrib",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model-contribution/getUserContrib.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"newContrib()",permalink:"/docs/model-contribution/newContrib"},next:{title:"getContribs()",permalink:"/docs/model-contribution/getContribs"}},d={},c=[{value:"Code",id:"code",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"getusercontrib",children:"getUserContrib()"}),"\n",(0,r.jsx)(t.p,{children:"La m\xe9thode getUserContrib() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un utilisateur et recherche la contribution de l'utilisateur pour le cadavre en cours, pour v\xe9rifier si le joueur \xe0 d\xe9j\xe0 participer \xe0 un cadavre ou non."}),"\n",(0,r.jsxs)(t.p,{children:["Si la contribution existe, la m\xe9thode la renvoit.\r\nSi la contribution n'existe pas, la m\xe9thode renvoit ",(0,r.jsx)(t.code,{children:"null"})]}),"\n",(0,r.jsx)(t.p,{children:"Cette m\xe9thode fait appel aux entit\xe9es :"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"Contribution"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"CadavreModel"})," -> pour utiliser la m\xe9thode ",(0,r.jsx)(t.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"code",children:"Code"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",metastring:'title="ContributionModel.php"',children:"public static function getUserContrib(int $user_id)\r\n    {\r\n        $activeCadavre = CadavreModel::getInstance()->cadavreEnCours();\r\n        $id_cadavre = $activeCadavre['id_cadavre'];\r\n        $userContrib = Contribution::getInstance()->findBy(['id_joueur'=>$user_id,'id_cadavre'=>$id_cadavre]);\r\n        return $userContrib;\r\n    }\n"})})]})}function l(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var r=n(7294);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);