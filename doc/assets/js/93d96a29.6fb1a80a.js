"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[1277],{445:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var o=t(5893),i=t(1151);const r={sidebar_position:2},a="getRandom()",d={id:"model-contribution/getRandom",title:"getRandom()",description:"La m\xe9thode getRandom() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un joueur pour trouver la contribution al\xe9atoirement choisit pour la Cadavre Exquis en cours actuellement afin qu'il puisse s'en inspirer pour \xe9crire sa propre contribution.",source:"@site/docs/model-contribution/getRandom.md",sourceDirName:"model-contribution",slug:"/model-contribution/getRandom",permalink:"/docs/model-contribution/getRandom",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model-contribution/getRandom.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"getInstance()",permalink:"/docs/model-contribution/getInstance"},next:{title:"setRandom()",permalink:"/docs/model-contribution/setRandom"}},c={},s=[{value:"Code",id:"code",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"getrandom",children:"getRandom()"}),"\n",(0,o.jsx)(n.p,{children:"La m\xe9thode getRandom() de la classe ContributionModel prend en param\xe8tre l'identifiant d'un joueur pour trouver la contribution al\xe9atoirement choisit pour la Cadavre Exquis en cours actuellement afin qu'il puisse s'en inspirer pour \xe9crire sa propre contribution."}),"\n",(0,o.jsxs)(n.p,{children:["Si la contribution choisit al\xe9atoirement existe, la fonction renvoit la contribution en question.\r\nSi la contribution choisit al\xe9atoirement n'existe pas, la fonction renvoit ",(0,o.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Cette m\xe9thode fait appel aux entit\xe9es :"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"Contribution"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"ContributionAl\xe9atoire"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Cette m\xe9thode fait aussi appel au mod\xe8le :"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CadavreModel"})," -> pour utiliser la fonction ",(0,o.jsx)(n.code,{children:"cadavreEnCours()"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:'title="ContributionModel.php"',children:"public static function getRandom(int $id_joueur)\r\n    {\r\n        $random = null;\r\n        $activeCadavre = CadavreModel::getInstance()->cadavreEnCours();\r\n        $contribAleaModel = ContributionAleatoire::getInstance();\r\n        // var_dump($activeCadavre);\r\n        $contribAleatoire = $contribAleaModel->findBy(\r\n            [\r\n                'id_joueur' => $id_joueur,\r\n                'id_cadavre' => $activeCadavre['id_cadavre'],\r\n            ]);\r\n            // var_dump($contribAleatoire);\r\n        if($contribAleatoire){\r\n            $random = Contribution::getInstance()->findBy(['id_contribution'=>$contribAleatoire['num_contribution']])[0];\r\n            var_dump($contribAleatoire);\r\n        }\r\n        return $random;\r\n    }\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>a});var o=t(7294);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);