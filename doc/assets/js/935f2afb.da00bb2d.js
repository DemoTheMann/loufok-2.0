"use strict";(self.webpackChunkloufok=self.webpackChunkloufok||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction \xe0 l\'application","href":"/loufok/doc/docs/introduction","docId":"introduction","unlisted":false},{"type":"link","label":"Entit\xe9es Loufok","href":"/loufok/doc/docs/loufok-entity","docId":"loufok-entity","unlisted":false},{"type":"category","label":"Mod\xe8le Admin","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"getInstance()","href":"/loufok/doc/docs/model-admin/getInstance","docId":"model-admin/getInstance","unlisted":false},{"type":"link","label":"getAdminName()","href":"/loufok/doc/docs/model-admin/getAdminName","docId":"model-admin/getAdminName","unlisted":false}],"href":"/loufok/doc/docs/category/mod\xe8le-admin"},{"type":"category","label":"Mod\xe8le Cadavre","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"getInstance()","href":"/loufok/doc/docs/model-cadavre/getInstance","docId":"model-cadavre/getInstance","unlisted":false},{"type":"link","label":"periodes()","href":"/loufok/doc/docs/model-cadavre/periodes","docId":"model-cadavre/periodes","unlisted":false},{"type":"link","label":"titres()","href":"/loufok/doc/docs/model-cadavre/titres","docId":"model-cadavre/titres","unlisted":false},{"type":"link","label":"cadavreEnCours()","href":"/loufok/doc/docs/model-cadavre/cadavreEnCours","docId":"model-cadavre/cadavreEnCours","unlisted":false},{"type":"link","label":"isCadavreOn()","href":"/loufok/doc/docs/model-cadavre/isCadavreOn","docId":"model-cadavre/isCadavreOn","unlisted":false},{"type":"link","label":"dateProchainCadavre()","href":"/loufok/doc/docs/model-cadavre/dateProchainCadavre","docId":"model-cadavre/dateProchainCadavre","unlisted":false},{"type":"link","label":"titreUnique()","href":"/loufok/doc/docs/model-cadavre/titreUnique","docId":"model-cadavre/titreUnique","unlisted":false},{"type":"link","label":"verificationPeriode()","href":"/loufok/doc/docs/model-cadavre/verificationPeriode","docId":"model-cadavre/verificationPeriode","unlisted":false},{"type":"link","label":"nouvelleContribution()","href":"/loufok/doc/docs/model-cadavre/nouvelleContribution","docId":"model-cadavre/nouvelleContribution","unlisted":false},{"type":"link","label":"nouveauCadavre()","href":"/loufok/doc/docs/model-cadavre/nouveauCadavre","docId":"model-cadavre/nouveauCadavre","unlisted":false},{"type":"link","label":"validationForm()","href":"/loufok/doc/docs/model-cadavre/validationForm","docId":"model-cadavre/validationForm","unlisted":false}],"href":"/loufok/doc/docs/category/mod\xe8le-cadavre"},{"type":"category","label":"Mod\xe8le Contribution","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"getInstance()","href":"/loufok/doc/docs/model-contribution/getInstance","docId":"model-contribution/getInstance","unlisted":false},{"type":"link","label":"getRandom()","href":"/loufok/doc/docs/model-contribution/getRandom","docId":"model-contribution/getRandom","unlisted":false},{"type":"link","label":"setRandom()","href":"/loufok/doc/docs/model-contribution/setRandom","docId":"model-contribution/setRandom","unlisted":false},{"type":"link","label":"countContrib()","href":"/loufok/doc/docs/model-contribution/countContrib","docId":"model-contribution/countContrib","unlisted":false},{"type":"link","label":"newContrib()","href":"/loufok/doc/docs/model-contribution/newContrib","docId":"model-contribution/newContrib","unlisted":false},{"type":"link","label":"getUserContrib()","href":"/loufok/doc/docs/model-contribution/getUserContrib","docId":"model-contribution/getUserContrib","unlisted":false},{"type":"link","label":"getContribs()","href":"/loufok/doc/docs/model-contribution/getContribs","docId":"model-contribution/getContribs","unlisted":false}],"href":"/loufok/doc/docs/category/mod\xe8le-contribution"},{"type":"category","label":"Mod\xe8le Joueur","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"getInstance()","href":"/loufok/doc/docs/model-joueur/getInstance","docId":"model-joueur/getInstance","unlisted":false},{"type":"link","label":"getUserName()","href":"/loufok/doc/docs/model-joueur/getUserName","docId":"model-joueur/getUserName","unlisted":false},{"type":"link","label":"getLatest()","href":"/loufok/doc/docs/model-joueur/getLatest","docId":"model-joueur/getLatest","unlisted":false}],"href":"/loufok/doc/docs/category/mod\xe8le-joueur"},{"type":"category","label":"Mod\xe8le Login","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"getInstance()","href":"/loufok/doc/docs/model-login/getInstance","docId":"model-login/getInstance","unlisted":false},{"type":"link","label":"authAdmin()","href":"/loufok/doc/docs/model-login/authAdmin","docId":"model-login/authAdmin","unlisted":false},{"type":"link","label":"authJoueur()","href":"/loufok/doc/docs/model-login/authJoueur","docId":"model-login/authJoueur","unlisted":false},{"type":"link","label":"logout()","href":"/loufok/doc/docs/model-login/authJoueur copy","docId":"model-login/authJoueur copy","unlisted":false}],"href":"/loufok/doc/docs/category/mod\xe8le-login"}]},"docs":{"introduction":{"id":"introduction","title":"Introduction \xe0 l\'application","description":"L\'application Loufok est une application web permettant la conception collaborative d\'un r\xe9cit \xe0 la mani\xe8re d\'un Cadavre Exquis.","sidebar":"tutorialSidebar"},"loufok-entity":{"id":"loufok-entity","title":"Entit\xe9es Loufok","description":"Les entit\xe9es sont responsable de la liaison entre la base de donn\xe9e MySQL et l\'application.","sidebar":"tutorialSidebar"},"model-admin/getAdminName":{"id":"model-admin/getAdminName","title":"getAdminName()","description":"La m\xe9thode getAdminName() de la classe AdminModel prend en param\xe8tre l\'identifiant d\'un administrateur et renvoie son adresse mail, ici utilis\xe9 comme son nom d\'utilisateur.","sidebar":"tutorialSidebar"},"model-admin/getInstance":{"id":"model-admin/getInstance","title":"getInstance()","description":"La m\xe9thode getInstance() de la classe AdminModel ne prend pas de param\xe8tres et renvoie l\'instance de la classe statique AdminModel.","sidebar":"tutorialSidebar"},"model-cadavre/cadavreEnCours":{"id":"model-cadavre/cadavreEnCours","title":"cadavreEnCours()","description":"La m\xe9thode cadavreEnCours() de la classe CadavreModel ne prend pas de param\xe8tres et effectue des v\xe9rifications de p\xe9riodes et de contributions max pour renvoyer les informations du Cadavre Exquis en cours ou alors rien si il n\'y en \xe0 pas.","sidebar":"tutorialSidebar"},"model-cadavre/dateProchainCadavre":{"id":"model-cadavre/dateProchainCadavre","title":"dateProchainCadavre()","description":"La m\xe9thode DateProchainCadavre() de la classe CadavreModel ne prend pas de param\xe8tres et renvoie la date de d\xe9but du prochain cadavre.","sidebar":"tutorialSidebar"},"model-cadavre/getInstance":{"id":"model-cadavre/getInstance","title":"getInstance()","description":"La m\xe9thode getInstance() de la classe CadavreModel ne prend pas de param\xe8tres et renvoie l\'instance de la classe statique CadavreModel.","sidebar":"tutorialSidebar"},"model-cadavre/isCadavreOn":{"id":"model-cadavre/isCadavreOn","title":"isCadavreOn()","description":"La m\xe9thode isCadavreOn() de la classe CadavreModel prend en param\xe8tre l\'identifiant d\'un cadavre et v\xe9rifie si il est toujours actif.","sidebar":"tutorialSidebar"},"model-cadavre/nouveauCadavre":{"id":"model-cadavre/nouveauCadavre","title":"nouveauCadavre()","description":"La m\xe9thode nouveauCadavre() de la classe CadavreModel prend en param\xe8tre l\'identifiant de l\'administrateur qui initie un nouveau Cadavre et les informations du formulaire d\'enregistrement d\'un nouveau cadavre.","sidebar":"tutorialSidebar"},"model-cadavre/nouvelleContribution":{"id":"model-cadavre/nouvelleContribution","title":"nouvelleContribution()","description":"La m\xe9thode nouvelleContribution() de la classe CadavreModel prend en param\xe8tre l\'identifiant de l\'administrateur qui initie un nouveau cadavre, les informations du nouveau Cadavre Exquis et le contenu texte de la contribution.","sidebar":"tutorialSidebar"},"model-cadavre/periodes":{"id":"model-cadavre/periodes","title":"periodes()","description":"La m\xe9thode periodes() de la classe CadavreModel ne prend pas de param\xe8tres et renvoit un array des p\xe9riodes d\xe9j\xe0 occup\xe9es par des cadavres existant.","sidebar":"tutorialSidebar"},"model-cadavre/titres":{"id":"model-cadavre/titres","title":"titres()","description":"La m\xe9thode titres() de la classe CadavreModel ne prend pas de param\xe8tres et renvoit un array des titres des cdavres existants.","sidebar":"tutorialSidebar"},"model-cadavre/titreUnique":{"id":"model-cadavre/titreUnique","title":"titreUnique()","description":"La m\xe9thode titreUnique() de la classe CadavreModel prend le titre d\'un nouveau cadavre exquis en param\xe8tre et v\xe9rifie si ce titre n\'exite pas d\xe9j\xe0 dans les cadavres d\xe9j\xe0 enregistr\xe9s.","sidebar":"tutorialSidebar"},"model-cadavre/validationForm":{"id":"model-cadavre/validationForm","title":"validationForm()","description":"La m\xe9thode validationForm() de la classe CadavreModel prend en param\xe8tre les informations du formulaire d\'ajout d\'un nouveau Cadavre et v\xe9rifie qu\'elles sont toutes conformes.","sidebar":"tutorialSidebar"},"model-cadavre/verificationPeriode":{"id":"model-cadavre/verificationPeriode","title":"verificationPeriode()","description":"La m\xe9thode verificationPerdiode() de la classe CadavreModel prend en param\xe8tre la date de d\xe9but et de fin d\'un nouveau cadavre et v\xe9rifie si elle ne chevauche pas sur la p\xe9riode d\'un Cadavre Exquis d\xe9j\xe0 existant.","sidebar":"tutorialSidebar"},"model-contribution/countContrib":{"id":"model-contribution/countContrib","title":"countContrib()","description":"La m\xe9thode countContrib() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un cadavre et renvoit le nombre de contributions qui lui sont attribu\xe9.","sidebar":"tutorialSidebar"},"model-contribution/getContribs":{"id":"model-contribution/getContribs","title":"getContribs()","description":"La m\xe9thode getContribs() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un cadavre et renvoit toutes les contributions qui lui sont associ\xe9es.","sidebar":"tutorialSidebar"},"model-contribution/getInstance":{"id":"model-contribution/getInstance","title":"getInstance()","description":"La m\xe9thode getInstance() de la classe ContributionModel ne prend pas de param\xe8tres et renvoie l\'instance de la classe statique ContributionModel.","sidebar":"tutorialSidebar"},"model-contribution/getRandom":{"id":"model-contribution/getRandom","title":"getRandom()","description":"La m\xe9thode getRandom() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un joueur pour trouver la contribution al\xe9atoirement choisit pour la Cadavre Exquis en cours actuellement afin qu\'il puisse s\'en inspirer pour \xe9crire sa propre contribution.","sidebar":"tutorialSidebar"},"model-contribution/getUserContrib":{"id":"model-contribution/getUserContrib","title":"getUserContrib()","description":"La m\xe9thode getUserContrib() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un utilisateur et recherche la contribution de l\'utilisateur pour le cadavre en cours, pour v\xe9rifier si le joueur \xe0 d\xe9j\xe0 participer \xe0 un cadavre ou non.","sidebar":"tutorialSidebar"},"model-contribution/newContrib":{"id":"model-contribution/newContrib","title":"newContrib()","description":"La m\xe9thode newContrib() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un utilisateur qui souhaite ajouter sa contribution \xe0 un cadavre, les informations du Cadavre Exquis en cours, le contenu textuel de la contribution \xe0 ajouter et l\'ordre \xe0 attribu\xe9 \xe0 la nouvelle contribution, calcul\xe9 en ammont dans le controller.","sidebar":"tutorialSidebar"},"model-contribution/setRandom":{"id":"model-contribution/setRandom","title":"setRandom()","description":"La m\xe9thode setRandom() de la classe ContributionModel prend en param\xe8tre l\'identifiant d\'un joueur pour d\xe9finir la contribution choisit al\xe9atoirement qui lui sera rattach\xe9 pour la Cadavre Exquis en cours.","sidebar":"tutorialSidebar"},"model-joueur/getInstance":{"id":"model-joueur/getInstance","title":"getInstance()","description":"La m\xe9thode getInstance() de la classe JoueurModel ne prend pas de param\xe8tres et renvoie l\'instance de la classe statique JoueurModel.","sidebar":"tutorialSidebar"},"model-joueur/getLatest":{"id":"model-joueur/getLatest","title":"getLatest()","description":"La m\xe9thode getLatest() de la classe JoueurModel prend en param\xe8tre l\'identifiant d\'un joueur et renvoit les informations du dernier Cadavre Exquis auquel il \xe0 particip\xe9.","sidebar":"tutorialSidebar"},"model-joueur/getUserName":{"id":"model-joueur/getUserName","title":"getUserName()","description":"La m\xe9thode getUserName() de la classe JoueurModel prend en param\xe8tre l\'identifiant d\'un joueur et renvoit son nom de plume.","sidebar":"tutorialSidebar"},"model-login/authAdmin":{"id":"model-login/authAdmin","title":"authAdmin()","description":"La m\xe9thode authAdmin() de la classe LoginModel prend en param\xe8tre les informations renseign\xe9s dans le formulaire de connexion et v\xe9rifie si il est possible r\xe9aliser une connexion administrateur.","sidebar":"tutorialSidebar"},"model-login/authJoueur":{"id":"model-login/authJoueur","title":"authJoueur()","description":"La m\xe9thode authJoueur() de la classe LoginModel prend en param\xe8tre les informations renseign\xe9s dans le formulaire de connexion et v\xe9rifie si il est possible r\xe9aliser une connexion utilisateur.","sidebar":"tutorialSidebar"},"model-login/authJoueur copy":{"id":"model-login/authJoueur copy","title":"logout()","description":"La m\xe9thode logout() de la classe LoginModel ne prend pas de param\xe8tres et effectue la d\xe9connexion de l\'utilisateur.","sidebar":"tutorialSidebar"},"model-login/getInstance":{"id":"model-login/getInstance","title":"getInstance()","description":"La m\xe9thode getInstance() de la classe LoginModel ne prend pas de param\xe8tres et renvoie l\'instance de la classe statique LoginModel.","sidebar":"tutorialSidebar"}}}')}}]);